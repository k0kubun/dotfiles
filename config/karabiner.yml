<%
at_office = `hostname`.start_with?('TD-')
c_o_app = at_office ? 'Slack' : 'Nocturn'
#c_o_app = 'Keynote'
%>
global:
  check_for_updates_on_startup: false
  show_in_menu_bar: true
  show_profile_name_in_menu_bar: false
profiles:
- name: Default profile
  selected: true
  virtual_hid_keyboard:
    caps_lock_delay_milliseconds: 0
    keyboard_type: jis
  devices:
  - disable_built_in_keyboard_if_exists: false
    identifiers:
      is_keyboard: true
      is_pointing_device: false
      product_id: 588
      vendor_id: 1452
    ignore: false
  fn_function_keys:
    f1: display_brightness_decrement
    f10: mute
    f11: volume_decrement
    f12: volume_increment
    f2: display_brightness_increment
    f3: mission_control
    f4: launchpad
    f5: illumination_decrement
    f6: illumination_increment
    f7: rewind
    f8: play_or_pause
    f9: fastforward

  simple_modifications:
    # For both
    caps_lock: escape
    left_option: right_command

    # For macbook US
    #left_command: left_control

    # SAVIOR
    japanese_pc_nfer: 'left_control'
    japanese_pc_xfer: 'left_shift'
    japanese_pc_katakana: 'right_command'

    # For macbook JIS:
    japanese_eisuu: "left_control"
    japanese_kana: "left_shift"
    left_control: escape

  # Main configurations
  complex_modifications:
    parameters:
      basic.to_if_alone_timeout_milliseconds: 1000
    rules:

    ################################################################################
    # US Macbook
    ################################################################################
    - description: US Macbook
      manipulators:

      # `~ -> \|
      # Right Shift -> _
<%    {
        grave_accent_and_tilde: 'international3', # `~ -> \|
        right_shift: 'international1', # shfit -> _
      }.each do |from, to| %>
      - type: basic
        from:
          key_code: <%= from %>
        to:
        - key_code: <%= to %>
        conditions:
        - type: device_if
          identifiers:
          # Apple Internal Keyboard (US)
          - vendor_id: 1452
            product_id: 588
<%    end %>

    ################################################################################
    # SandS
    ################################################################################
    - description: Change spacebar to left_shift. (Post spacebar if pressed alone)
      manipulators:
      - type: basic
        from:
          key_code: spacebar
          modifiers:
            optional: [any]
        to:
        - key_code: left_shift
        to_if_alone:
        - key_code: spacebar
        conditions:
        - type: device_if
          identifiers:
          # Apple Internal Keyboard (US)
          - vendor_id: 1452
            product_id: 588

    ################################################################################
    # Launchers
    ################################################################################
    - description: Launchers
      manipulators:

      # C-u: Google Chrome
      # C-o: Nocturn, Slack
      # C-h: Terminal
<%    at_office = (ENV['USER'] == 'kokubun') # I use "k0kubun" for personal PC
      {
        u: 'Google Chrome',
        y: 'IntelliJ IDEA',
        o: c_o_app,
        h: 'Utilities/Terminal',
      }.each do |key, app| %>
      - type: basic
        from:
          key_code: '<%= key %>'
          modifiers:
            mandatory: [left_control]
        to:
        - shell_command: open "<%= ("/System" if app =~ /Terminal/) %>/Applications/<%= app %>.app"
<%    end %>

    ################################################################################
    # Non-Terminal remaps
    ################################################################################
    - description: Non terminal remaps
      manipulators:

      # Cmd-b -> Opt-Left
      # Cmd-f -> Opt-Right
      # Cmd-d -> Opt-Delete
      # C-r -> Cmd-r
      # Cmd-o -> Ctrl-Shift-Tab
      # Cmd-p -> Ctrl-Shift-Tab
<%    {
        ['b', ['right_command']] => ['left_arrow', ['left_option']],
        ['f', ['right_command']] => ['right_arrow', ['left_option']],
        ['d', ['right_command']] => ['delete_forward', ['left_option']],
        ['r', ['left_control']] => ['r', ['left_command']],
        ['o', ['right_command']] => ['tab', ['right_control', 'left_shift']],
        ['p', ['right_command']] => ['tab', ['right_control']],
      }.each do |from, to|
        from_key, from_value = from
        to_key,   to_value   = to %>
      - type: basic
        from:
          key_code: <%= from_key %>
          modifiers:
            mandatory: <%= from_value %>
        to:
        - key_code: <%= to_key %>
          modifiers: <%= to_value %>
        conditions:
        - type: frontmost_application_unless
          bundle_identifiers:
          - "^com\\.apple\\.Terminal$"
<%    end %>
      # Â¥ -> \
      - type: basic
        from:
          key_code: international3
        to:
        - key_code: international3
          modifiers: right_option
        conditions:
        - type: frontmost_application_unless
          bundle_identifiers:
          - "^com\\.apple\\.Terminal$"

    ################################################################################
    # Non-Terminal & non-IntelliJ remaps
    ################################################################################
    - description: Non-terminal & non-IntelliJ remaps
      manipulators:

      # C-w -> Opt-Backspace
<%    {
        ['w', ['left_control']] => ['delete_or_backspace', ['left_option']],
      }.each do |from, to|
        from_key, from_value = from
        to_key,   to_value   = to %>
      - type: basic
        from:
          key_code: <%= from_key %>
          modifiers:
            mandatory: <%= from_value %>
        to:
        - key_code: <%= to_key %>
          modifiers: <%= to_value %>
        conditions:
        - type: frontmost_application_unless
          bundle_identifiers:
          - "^com\\.apple\\.Terminal$"
          - "^com\\.jetbrains\\.intellij(\\.ce)?$"
<%    end %>

    ################################################################################
    # Chrome remaps
    ################################################################################
    - description: Chrome remaps
      manipulators:

      # Cmd-s -> Cmd-f
      # C-f -> Right (For Confluence)
      # Cmd-Enter -> Enter (To disable comment on GitHub)
<%    {
        ['s', ['right_command']] => ['f', ['right_command']],
        ['f', ['left_control']] => ['right_arrow', []],
        ['return_or_enter', ['right_command']] => ['return_or_enter', []],
      }.each do |from, to|
        from_key, from_value = from
        to_key,   to_value   = to %>
      - type: basic
        from:
          key_code: <%= from_key %>
          modifiers:
            mandatory: <%= from_value %>
        to:
        - key_code: <%= to_key %>
<%      unless to_value.empty? %>
          modifiers: <%= to_value %>
<%      end %>
        conditions:
        - type: frontmost_application_if
          bundle_identifiers:
          - "^com\\.google\\.Chrome$"
<%    end %>

    ################################################################################
    # Terminal remaps
    ################################################################################
    - description: Terminal remaps
      manipulators:

      # Cmd-i -> Opt-i, Cmd-r -> Opt-r
      # Cmd-t -> Opt-t, Cmd-w -> Opt-w
      # Cmd-f -> Opt-f, Cmd-b -> Opt-b, Cmd-d -> Opt-d
      # Cmd-j -> Opt-j, Cmd-k -> Opt-k
      # Cmd-o -> Opt-o, Cmd-o -> Opt-p
<%    {
        ['i', ['right_command']] => ['i', ['left_option']],
        ['r', ['right_command']] => ['r', ['left_option']],
        ['t', ['right_command']] => ['t', ['left_option']],
        ['w', ['right_command']] => ['w', ['left_option']],
        ['f', ['right_command']] => ['f', ['left_option']],
        ['b', ['right_command']] => ['b', ['left_option']],
        ['d', ['right_command']] => ['d', ['left_option']],
        ['j', ['right_command']] => ['j', ['left_option']],
        ['k', ['right_command']] => ['k', ['left_option']],
        ['o', ['right_command']] => ['o', ['left_option']],
        ['p', ['right_command']] => ['p', ['left_option']],
      }.each do |from, to|
        from_key, from_value = from
        to_key,   to_value   = to %>
      - type: basic
        from:
          key_code: <%= from_key %>
          modifiers:
            mandatory: <%= from_value %>
        to:
        - key_code: <%= to_key %>
          modifiers: <%= to_value %>
        conditions:
        - type: frontmost_application_if
          bundle_identifiers:
          - "^com\\.apple\\.Terminal$"
<%    end %>

    ################################################################################
    # Slack remaps
    ################################################################################
    - description: Slack remaps
      manipulators:

      # Cmd-n -> Cmd-k
      # Cmd-k -> Opt-Up
      # Cmd-j -> Opt-Down
      # Cmd-C-k -> Opt-Shift-Up
      # Cmd-C-j -> Opt-Shift-Down
      # Cmd-Enter -> Opt-Enter
<%    {
        ['"n"', ['right_command']] => ['k', ['left_command']], # YAML: Just `n` becomes `false` instead of `"n"`
        ['k', ['right_command']] => ['up_arrow', ['left_option']],
        ['j', ['right_command']] => ['down_arrow', ['left_option']],
        ['k', ['right_command', 'left_control']] => ['up_arrow', ['left_option', 'left_shift']],
        ['j', ['right_command', 'left_control']] => ['down_arrow', ['left_option', 'left_shift']],
        ['return_or_enter', ['right_command']] => ['return_or_enter', ['left_option']],
      }.each do |from, to|
        from_key, from_value = from
        to_key,   to_value   = to %>
      - type: basic
        from:
          key_code: <%= from_key %>
          modifiers:
            mandatory: <%= from_value %>
        to:
        - key_code: <%= to_key %>
          modifiers: <%= to_value %>
        conditions:
        - type: frontmost_application_if
          bundle_identifiers:
          - "^com\\.tinyspeck\\.slackmacgap$"
<%    end %>

      # C-1 -> Cmd-1 ... C-9 -> Cmd-9
<%    (1..9).each do |i| %>
      - from:
          key_code: '<%= i %>'
          modifiers:
            mandatory:
            - left_control
        to:
        - key_code: '<%= i %>'
          modifiers:
          - right_command
        type: basic
        conditions:
        - type: frontmost_application_if
          bundle_identifiers:
          - "^com\\.tinyspeck\\.slackmacgap$"
<%    end %>

    ################################################################################
    # IntelliJ remaps
    ################################################################################
    - description: IntelliJ remaps
      manipulators:

      # C-k -> [Shfit-End, Backspace]
      - type: basic
        from:
          key_code: k
          modifiers:
            mandatory: left_control
        to:
        - key_code: end
          modifiers: left_shift
        - key_code: delete_or_backspace
        conditions:
        - type: frontmost_application_if
          bundle_identifiers:
          - "^com\\.jetbrains\\.intellij(\\.ce)?$"

      # C-p -> â
      # C-n -> â
      # C-a -> Home
      # C-e -> End
<%    {
        ['"n"', ['left_control']] => 'down_arrow', # YAML: Just `n` becomes `false` instead of `"n"`
        ['p', ['left_control']] => 'up_arrow',
        ['a', ['left_control']] => 'home',
        ['e', ['left_control']] => 'end',
        ['d', ['left_control']] => 'delete_forward',
      }.each do |from, to|
        from_key, from_value = from %>
      - type: basic
        from:
          key_code: <%= from_key %>
          modifiers:
            mandatory: <%= from_value %>
        to:
        - key_code: <%= to %>
        conditions:
        - type: frontmost_application_if
          bundle_identifiers:
          - "^com\\.jetbrains\\.intellij(\\.ce)?$"
<%    end %>

      # Cmd-Enter -> Opt-Enter
<%    {
        ['return_or_enter', ['right_command']] => ['return_or_enter', ['right_option']],
      }.each do |from, to|
        from_key, from_value = from
        to_key,   to_value   = to %>
      - type: basic
        from:
          key_code: <%= from_key %>
          modifiers:
            mandatory: <%= from_value %>
        to:
        - key_code: <%= to_key %>
          modifiers: <%= to_value %>
        conditions:
        - type: frontmost_application_if
          bundle_identifiers:
          - "^com\\.jetbrains\\.intellij(\\.ce)?$"
<%    end %>

    ################################################################################
    # Word remaps
    ################################################################################
    - description: Word remaps
      manipulators:

      # C-k -> [Shfit-End, Backspace]
      - type: basic
        from:
          key_code: k
          modifiers:
            mandatory: left_control
        to:
        - key_code: end
          modifiers: left_shift
        - key_code: delete_or_backspace
        conditions:
        - type: frontmost_application_if
          bundle_identifiers:
          - "^com\\.microsoft\\.Word$"

      # C-p -> â
      # C-n -> â
      # C-b -> â
      # C-f -> â
      # C-a -> Home
      # C-e -> End
<%    {
        ['"n"', ['left_control']] => 'down_arrow', # YAML: Just `n` becomes `false` instead of `"n"`
        ['p', ['left_control']] => 'up_arrow',
        ['b', ['left_control']] => 'left_arrow',
        ['f', ['left_control']] => 'right_arrow',
        ['a', ['left_control']] => 'home',
        ['e', ['left_control']] => 'end',
        ['d', ['left_control']] => 'delete_forward',
      }.each do |from, to|
        from_key, from_value = from %>
      - type: basic
        from:
          key_code: <%= from_key %>
          modifiers:
            mandatory: <%= from_value %>
        to:
        - key_code: <%= to %>
        conditions:
        - type: frontmost_application_if
          bundle_identifiers:
          - "^com\\.microsoft\\.Word$"
<%    end %>
